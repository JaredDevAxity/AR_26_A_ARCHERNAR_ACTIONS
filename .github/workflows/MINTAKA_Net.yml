name: Workflow MIMTAKA CI

on:
  workflow_call:
    inputs:
      node-version:
        required: true
        type: string
      net-version:
        required: true
        type: string

jobs:
  Build-NetCore6:
    if: ${{inputs.net-version == '6'}}
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Yeoman
        run: |
          npm install -g yo generator-code yeoman-generator
          npm install
          npm link
        working-directory: generator/6.0/Generator/generator-netcore6

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.x"
          include-prerelease: true

      - name: Generate code
        run: yo netcore6
        working-directory: generator/6.0/Generator/generator-netcore6

      - name: Restore dependencies
        run: dotnet restore
        working-directory: generator/6.0/Generator/generator-netcore6/arquetipounittesting-service

      - name: Build
        run: dotnet build --no-restore
        working-directory: generator/6.0/Generator/generator-netcore6/arquetipounittesting-service

      - name: Test
        run: dotnet test --no-build --verbosity normal
        working-directory: generator/6.0/Generator/generator-netcore6/arquetipounittesting-service

      - uses: actions/setup-java@v1
        with:
          java-version: "17"

      - name: SonarQube Analysis
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /k:"Test_CREA_Sonar_Archernar" /d:sonar.login="sqp_62d48b60880f8f08933ee1c5fcaacb584c2f361e" /d:sonar.host.url="https://devtools.axity.com/sonarlts"
          dotnet build --configuration Release
          dotnet test --configuration .\Axity.ArquetipoUnitTesting.Api\Axity.ArquetipoUnitTesting.sln /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=\"TestResults/\"
          dotnet sonarscanner end /d:sonar.login="sqp_62d48b60880f8f08933ee1c5fcaacb584c2f361e"
        working-directory: generator/6.0/Generator/generator-netcore6/arquetipounittesting-service

  Build-NetCore3:
    if: ${{ inputs.net-version == '3' }}
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node-version }}

      - name: Install Yeoman
        run: |
          npm install -g yo generator-code yeoman-generator
          npm install
          npm link
        working-directory: generator/3.1/Generator

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "3.x"
          include-prerelease: true

      - name: Generate code
        run: yo netcore3 --company="Axity" --name="Test" --port="9090"
        working-directory: generator/3.1/Generator
## name: Compile MINTAKA

# on:
#   workflow_call:
#     inputs:
#       node-version:
#         required: true
#         type: string
#       net-version:
#         required: true
#         type: string

# jobs:
#   Build-NetCore6:
#     if: ${{ inputs.net-version == '6' }}
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0
#       - name: Setup Node
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ inputs.node-version }}
#       - name: Install Yeoman
#         run: |
#           npm install -g yo generator-code yeoman-generator
#           npm install
#           npm link
#         working-directory: generator/6.0/Generator/generator-netcore6
#       - name: Generate code
#         run: yo netcore6
#         working-directory: generator/6.0/Generator/generator-netcore6
#       - name: Set up .NET Core
#         uses: actions/setup-dotnet@v1
#         with:
#           dotnet-version: '6.x'
#           include-prerelease: true
#       - name: Restore dependencies
#         run: dotnet restore
#         working-directory: generator/6.0/Generator/generator-netcore6/arquetipounittesting-service/Axity.ArquetipoUnitTesting.API
#       - name: Build
#         run: dotnet build --no-restore
#         working-directory: generator/6.0/Generator/generator-netcore6/arquetipounittesting-service/Axity.ArquetipoUnitTesting.API

#       - name: Archive Build
#         uses: actions/upload-artifact@v4
#         with:
#           name: dist
#           path: generator/6.0/Generator/generator-netcore6/arquetipounittesting-service/Axity.ArquetipoUnitTesting.API

#   Build-NetCore3:
#     if: ${{ inputs.net-version == '3' }}
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0
#       - name: Setup Node
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ inputs.node-version }}
#       - name: Install Yeoman
#         run: |
#           npm install -g yo generator-code yeoman-generator
#           npm install
#           npm link
#         working-directory: generator/3.1/Generator
#       - name: Generate code
#         run: yo netcore3 --company="Axity" --name="Text" --port="9090"
#         working-directory: generator/3.1/Generator

#   Test:
#     needs: Build-NetCore6
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0
#       - name: Download dist
#         uses: actions/download-artifact@v4
#         with:
#           name: dist
#       - name: Test
#         run: dotnet test --no-build --verbosity normal
#       - name: Set up JDK 17
#         uses: actions/setup-java@v3
#         with:
#           java-version: '17'
#           distribution: "temurin"
#       - name: SonarQube Analysis
#         run: |
#           dotnet tool install --global dotnet-sonarscanner
#           dotnet sonarscanner begin /k:"Test_CREA_Sonar_Archernar" /d:sonar.login="sqp_62d48b60880f8f08933ee1c5fcaacb584c2f361e" /d:sonar.host.url="https://devtools.axity.com/sonarlts"
#           dotnet build --configuration Release
#           dotnet test --configuration .\Axity.ArquetipoUnitTesting.Api\Axity.ArquetipoUnitTesting.sln /p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:CoverletOutput=\"TestResults/\"
#           dotnet sonarscanner end /d:sonar.login="sqp_62d48b60880f8f08933ee1c5fcaacb584c2f361e"
#         working-directory: 'generator/6.0/Generator/generator-netcore6/arquetipounittesting-service/Axity.ArquetipoUnitTesting.API'

