name: Workflow BETELGEUSE

on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
      run-path:
        required: true
        type: string

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install tox and any other packages
        run: pip install tox
        working-directory: ${{ inputs.run-path }}/backend

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-python
          path: ${{inputs.run-path}}

      # - name: Run tox
      #   run: tox -e py
      #   working-directory: ${{ inputs.path-base }}/backend

      # - name: XML Fix Format
      #   run: |
      #     xml_file_path="coverage.xml"
      #     new_filename_prefix="backend"
      #     sed -i "s|filename=\"\(.*\)\"|filename=\"$new_filename_prefix\/\1\"|g" "$xml_file_path"
      #   working-directory: ${{ inputs.path-base }}/backend

      # - name: SonarQube Scan
      #   uses: sonarsource/sonarqube-scan-action@master
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL  }}

  Test:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-python

      - name: Install tox and any other packages
        run: pip install tox
        working-directory: backend

      - name: Run tox
        run: tox -e py
        working-directory: backend

      - name: XML Fix Format
        run: |
          xml_file_path="coverage.xml"
          new_filename_prefix="backend"
          sed -i "s|filename=\"\(.*\)\"|filename=\"$new_filename_prefix\/\1\"|g" "$xml_file_path"
        working-directory: backend

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL  }}

      # - name: SonarQube Scan
      #   uses: sonarsource/sonarqube-scan-action@master
      #   with:
      #     projectBaseDir: backend
      #     args: >
      #       -Dsonar.projectKey=${{ secrets.PROJECT_KEY }}
      #       -Donar.python.version=3.9
      #       -Dsonar.python.coveragePlugin=cobertura
      #       -Dsonar.python.coverage.reportPaths=backend/coverage.xml
      #       -Dsonar.python.unittest.reportPath=backend/coverage.xml
      #       -Dsonar.test.inclusions=**/tests/**
      #       -Dsonar.exclusions=**/__init__.py
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
