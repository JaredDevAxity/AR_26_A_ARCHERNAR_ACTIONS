name: Java SpringBoot CI

on:
  push:
    branches: [feature/* , develop ]
  workflow_call:
    inputs:
      maven_opts:
        description: 'Options for Maven. Example: "-Xmx512m"'
        type: string
        
      sonar_project_key:
        description: 'SonarQube project key'
        required: true
        type: string

      sonar_project_name:
        description: 'SonarQube project name'
        required: true
        type: string

      sonar_host_url:
        description: 'SonarQube host URL'
        required: true
        type: string

      sonar_login_token:
        description: 'SonarQube login token'
        required: true
        type: string

      sonar_sources:
        description: 'SonarQube sources'
        required: true
        type: string

      sonar_exclusions:
        description: 'SonarQube exclusions'
        required: true
        type: string

      npm_install:
        description: 'Run npm install'
        required: true
        type: string

      npm_test:
        description: 'Run npm test'
        required: true
        type: string

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: 
          fetch-depth: 0

      - name: Setup
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
        
      - name: Setup Maven Action
        uses: s4u/setup-maven-action@v1.7.0
        with:
          java-version: 11
          maven-version: 3.8.7

      - name: Install & Compile with Maven
        run: mvn clean install -DskipTests
        working-directory: backend/form-service

      - name: Download dependencies with NPM
        run: |
          if [ "${{ inputs.npm_install }}" == "true" ]; then
            npm ci
          fi
        working-directory: front

      - name: Test CI with NPM
        run: |
          if [ "${{ inputs.npm_test }}" == "true" ]; then
            npm run test-ci
          fi
        working-directory: front

      - name: Run Sonar Scanner
        run: |
          mvn install verify sonar:sonar \
            -Dsonar.projectKey=${{ inputs.sonar_project_key }} \
            -Dsonar.projectName=${{ inputs.sonar_project_name }} \
            -Dsonar.host.url=${{ inputs.sonar_host_url }} \
            -Dsonar.login=${{ inputs.sonar_login_token }} \
            -Dsonar.sources=${{ inputs.sonar_sources }} \
            -Dsonar.exclusions=${{ inputs.sonar_exclusions }}
        working-directory: generator/jdk11/office-service

